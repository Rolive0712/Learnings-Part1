1. VS2013 express for web can be installed only on Win 2008 server R2. It will not install on Win 2008 Server.
   VS2013 will install .net 4.5.1 & its sdk

2. If site is developed in MVC 4 web API, .NET framework 4.5.1, then do the follwing pre-requisites on Win 2008 R2 server
   a. Install .net framework 4.5.1
       OR
      Install VS 2013 express for Web on machine.
      
   b. If the machine does not have anything configured in it, do the follwing
      i. Go to Server Manager & Under Roles, Configure Application Server & WebServer (IIS)
      ii.Add Roles & Role Services.
         Under Roles, Select Application Server & Web Server (IIS) & install all components within it.
         Under Role Services, Select .NET framework 3.5.1 & install all components within it.
         Under Role Services, Select Web Server (IIS) Support & install all components within it.
         Under Role Services, Select HTTP Activation & install all components within it.
         
         Then Under Web Server (IIS), Install all under Web Server (Installed)
           . Common HTTP features
           . Application Development
           . Health & Diagnostics
           . Security
           . Performance
         
         Then Under Management Tools, Install all under it
           . IIS management console
           . IIS management script and tools
           . Management service
           
           Install all under IIS6 management compatibility

3. After configuring all the above check if site uses windows authentication in it.
   If yes, then go to IIS and click on the virtual directory within the website & enable windows authentication.
      . Click on VD, and select Authentication in the features view
      . Enable Anonymous & Windows Authentication. Keep all others disabled.
      . comment out <!-- <authorization><deny users="?" /></authorization>   --> or else pop up will appear to authenticate on first time access

4. After step 1,2,3, browse the URL and site should be up and running.

5. All the steps are required only if the project uses the following:
  . MVC / Asp.Net
  . Web API or any others
  . .NET framework 4.0 +
  . Uses windows authentication configured in web.config
   

6. ******* How to configure Windows Authentication & IIS impersonation on WIndows Account for MVC Intranet app hosted on Windows 2008 R2******
   Note: if .net framework is not installed & role services/ features not configured, perform steps 2a & 2b shown above.
  . Go to IIS 7.5 & Create new application pool. Right click app pool & go to advanced settings.
  . Set app pool identity to custom windows account identity which should have access on the sql server database.
    Provide uer name & password of the custom account, confirm password and click ok
  . Set it to v4.0 Integrated pipeline.
  . Go to VS 2010/ 2012, Create new MVC 4 Intranet application.
  . Change web.config to setup windows authentication & impersonation as shown below. comment anonymous users.
  
    <customErrors mode="Off"/>
    <compilation debug="true" targetFramework="4.0" />
    <authentication mode="Windows" />
    <!--<authorization>
      <deny users="?" />
    </authorization>-->
    <identity impersonate="true" userName="EUR\fdcctisqlritdev01" password="R3solve1t"/>
    
   . Publish code in IIS 7.5 under default website. physical path: C:\inetpub\wwwroot\<ProjectName>
   . Under website, right click folder & convert to application.
   . Set it to use the new application pool mentioned in first point above.
   . Once virtual directory is created, click on it and go to "authentication" under features view.
   . Enable Windows authentication & ensure "kernel mode authentication" is checked.
   . Under providers for windows auth, ensure "Negotiate" is at the top.
   . Enable Aps.net impersonation and set it to specific user "Domain\UserName" as mentioned in web.config above.
   . Disable Anonymous authentication, forms authentication & all others.
   . If Anonymous authentication is enabled (which is by default), windows auth will not work.
  
   . After the IIS part is completed, go to C:\Windows\Microsoft.NET\Framework64\v4.0.30319\
   . Provide full control access to windows account "EUR\fdcctisqlritdev01" on "Temporary ASP.NET Files" folder.
   . if access is not provided, then on running application, the below error will be seen
     error => 
      The current identity (EUR\fdcctisqlritdev01) does not have write access to 
     'C:\Windows\Microsoft.NET\Framework64\v4.0.30319\Temporary ASP.NET Files'.
   
   . After folder access is provided, add 2 lines mentioned below in the layout page of MVC app inside body tag
     UserIdentity : @HttpContext.Current.User.Identity.Name - 
     IIS Identity (Win Ident): @System.Security.Principal.WindowsIdentity.GetCurrent().Name
   
   . Deploy code back in IIS & run the application
   . UI should be up and running. 
   . Press F12. refresh app. Ensure all images, javascript & css files are loading correctly in chrome dev toolbar.
   
   Note: At the top of the page in browser, the text below should be displayed
   . UserIdentity : NAM\rr53665 - IIS Identity (Win Ident): EUR\fdcctisqlritdev01
   
   This ensures, IIS is correctly impersonating the user and app is working after authentication user from 
   Windows active directory as seen from UserIdentity above.
